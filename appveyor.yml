version: 1.2.{build}-{branch}
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: false

# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: c:\projects\libaps2

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
platform:
  - x64
configuration:
  - Release

# scripts that run after cloning repository
install:
  # get dependencies
  - git submodule update --init --recursive
  # install HDF5
  - ps: if not exist hdf5.zip Invoke-WebRequest "https://support.hdfgroup.org/ftp/HDF5/current18/bin/windows/extra/hdf5-1.8.18-win64-vs2015-shared.zip" -OutFile hdf5.zip
  - 7z x hdf5.zip -y
  - ps: Start-Process -FilePath msiexec -ArgumentList '/I "hdf5\HDF5-1.8.18-win64.msi" /quiet' -Wait

build: off

# scripts to run before build
before_build:

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:
  # create build directory and call cmake
  - md build
  - cd build
  - set HDF5_DIR=C:/Program Files/HDF_Group/HDF5/1.8.18/cmake
  - cmake -G "Visual Studio 14 2015 Win64" ..\src
  - cmake --build . --config %configuration%

cache:
# cache dependency downloads to avoid network unreliability
  - hdf5.zip -> appveyor.yml

# artifacts configuration
artifacts:

  # pushing entire folder as a zip archive
  - path: build\Release

#
#     # Deploy to GitHub Releases
#   - provider: GitHub
#     artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
#     draft: false
#     prerelease: false
#     on:
#       branch: master                # release from master branch only
#       appveyor_repo_tag: true       # deploy on tag push only
#
