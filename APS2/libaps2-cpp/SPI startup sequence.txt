SPI startup sequence

92000032 E0000000 08600004 E0000000 64910061 D8990000 D87C0010 D8050011 D8060014 D8050016 D8040017 D8600018 D82D001A D801001B D807001C D80000F0 D80000F1 D80200F2 D80800F3 D80200F4 D80000F5 D8000190 D8000191 D8000193 D8100196 D80001E0 D80201E1 D8010232 D8710018 D8010232 D8700018 D8010232 FF00

# julia functions to unpack packet
function print_command(cmd)
	println("ACK: $((cmd >> 31) & 1)")
	println("RESV: $((cmd >> 30) & 1)")
	println("SEL: $((cmd >> 29) & 1)")
	println("R/W: $((cmd >> 28) & 1)")
	println("CMD: $((cmd >> 24) & 7)")
	println("MODE/STAT: $((cmd >> 16) & 0xff)")
	println("CNT: $((cmd >> 0) & 0xffff)")
end

function print_config(cmd)
	@printf("TARGET: %X\n", (cmd >> 24) & 0xff)
	println("SPICNT/DATA: $((cmd >> 16) & 0xff)")
	@printf("INSTR: %X\n", (cmd >> 0) & 0xffff)
end

92000032 : ACK, Read, EPROMIO, CNT=50
E0000000 : TARGET=VCXO, SPICNT=0
08600004 : VXCO instruction
E0000000 : TARGET=VCXO, SPICNT=0
64910061 : VXCO instruction
TARGET=PLL_SINGLE from here on...
D8990000 : DATA=0x99, INSTR=0x0
D87C0010 : DATA=0x7C, INSTR=0x10
D8050011 : DATA=0x5 , INSTR=0x11
D8060014 : DATA=0x6 , INSTR=0x14
D8050016 : DATA=0x5 , INSTR=0x16
D8040017 : DATA=0x4 , INSTR=0x17
D8600018 : DATA=0x60, INSTR=0x18
D82D001A : DATA=0x2D, INSTR=0x1A
D801001B : DATA=0x01, INSTR=0x1B (new command!!) -> REFMON pin control = REF1 clock
D807001C : DATA=0x07, INSTR=0x1C
D80000F0 : DATA=0x00, INSTR=0xF0 -> Enable 400mV differential OUT0
D80000F1 : DATA=0x00, INSTR=0xF1 -> Enable 400mV differential OUT1
D80200F2 : DATA=0x02, INSTR=0xF2 (new command!!) -> Disable (power-down) OUT2
D80800F3 : DATA=0x08, INSTR=0xF3 (new command!!) -> Enable 780mV differential OUT3
D80200F4 : DATA=0x02, INSTR=0xF4 (new command!!) -> Disable (power-down) OUT4
D80000F5 : DATA=0x00, INSTR=0xF5 -> Enable 400mV differential OUT5
D8000190 : DATA=0x00, INSTR=0x190 -> divider 0, 1 low 1 high cyles = 2
D8000191 : DATA=0x00, INSTR=0x191 (new command!!) -> enable divider 0 -> to default to 1.2 GHz, write 0x80 instead
D8000193 : DATA=0x00, INSTR=0x193 (new command!!) -> divider 1, 1 low 1 high cycles = 2 -> write 0x11 for 300 MHz reference
D8100196 : DATA=0x10, ISNTR=0x196 (new command!!) -> divider 2, 2 low 1 high cycles = 3
D80001E0 : DATA=0x00, INSTR=0x1E0 -> VCO divide by 2
D80201E1 : DATA=0x02, INSTR=0x1E1
D8010232
D8710018
D8010232
D8700018
D8010232

Result of all these PLL instructions is:
OUT0 = 600 MHz to DAC0
OUT1 = 600 MHz to DAC1
OUT2 = disabled
OUT3 = 600 MHz sys_clk to FPGA
OUT4 = disabled
OUT5 = 400 MHz memory_clk to FPGA